/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thi_hk.view;

import java.awt.Color;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import thi_hk.Model.XuatDonhang;

/**
 *
 * @author Admin
 */
public class DonhangJfame extends javax.swing.JFrame {

    /**
     * Creates new form DonhangJfame
     */
    private java.sql.Connection con = null;
    public DonhangJfame() {
        initComponents();
        ShowDL();
    }
    private void ShowDL(){
            String url = "net.sourceforge.jtds.jdbc.Driver";
        try {
            Class.forName(url);
            String dbUrl = "jdbc:jtds:sqlserver://DAUCONG:1433/BanDoAnVat";
            con = DriverManager.getConnection(dbUrl);
            PreparedStatement st = con.prepareStatement("Select * from DonHang");
            ResultSet rs = st.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblDonhang.getModel();
            while(rs.next()){
                Object objList[] = {rs.getInt("ID"),rs.getString("MaDH"), rs.getString("MaKH"),rs.getString("HoTenKH"),rs.getString("TenSP"),rs.getInt("Soluong"),rs.getInt("Giaban")};
                model.addRow(objList);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DonhangJfame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DonhangJfame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        txtGiaban = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtSoluong = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtmaKH = new javax.swing.JTextField();
        txtMadh = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtTenSP = new javax.swing.JTextField();
        txtHotenKH = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonhang = new javax.swing.JTable();
        btnTimkiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel7.setText("Họ Tên KH:");

        jLabel9.setText("Số lượng:");

        jLabel10.setText("Giá bán:");

        jLabel2.setText("ID:");

        jLabel3.setText("Mã DH:");

        jLabel4.setText("Mã KH:");

        jLabel5.setText("Tên SP:");

        btnThem.setBackground(new java.awt.Color(204, 204, 204));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thi_hk/chucnang/add-button (1).png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(204, 204, 204));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thi_hk/chucnang/refresh (3).png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(204, 204, 204));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thi_hk/chucnang/delete (2).png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        tblDonhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MaDH", "MaKH", "HoTenKH", "TenSP", "Soluong", "Giaban"
            }
        ));
        jScrollPane1.setViewportView(tblDonhang);

        btnTimkiem.setBackground(new java.awt.Color(204, 204, 204));
        btnTimkiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTimkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thi_hk/chucnang/seo (2).png"))); // NOI18N
        btnTimkiem.setText("Tìm kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtMadh)
                    .addComponent(txtmaKH)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnThem)
                        .addGap(39, 39, 39)
                        .addComponent(btnSua)
                        .addGap(34, 34, 34)
                        .addComponent(btnXoa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHotenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoluong)
                            .addComponent(txtGiaban, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnTimkiem))
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtHotenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMadh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean insert(XuatDonhang xdh){
        String sql = "insert into DonHang(ID, maDH, maKH, HotenKH, Tensp, soluong, giaban) values(?,?,?,?,?,?,?)";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, xdh.getID());
            ps.setString(2, xdh.getMaDH());
            ps.setString(3, xdh.getMaKH());
            ps.setString(4, xdh.getHoten());
            ps.setString(5, xdh.getTenSP());
            ps.setInt(6, xdh.getSoluong());
            ps.setInt(7, xdh.getGiaban());
            return ps.executeUpdate()>0;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
        public boolean update(XuatDonhang xdh){
        String sql = "update DonHang set ID = ?, maKH = ?, HotenKH = ?, TenSP = ?, soluong = ?, giaban = ?"
                + "where maDH = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, xdh.getID());
            
            ps.setString(2, xdh.getMaKH());
            ps.setString(3, xdh.getHoten());
            ps.setString(4, xdh.getTenSP());
            ps.setInt(5, xdh.getSoluong());
            ps.setInt(6, xdh.getGiaban());
            ps.setString(7, xdh.getMaDH());
            return ps.executeUpdate()>0;
        } catch (Exception e) {
            e.printStackTrace();
        }
         return false;

    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
                StringBuilder sb = new StringBuilder();
        if(txtMadh.getText().equals("")){
            sb.append("Mã Đơn hàng không được để trống");
            txtMadh.setBackground(Color.red);
        }else{
            txtMadh.setBackground(Color.white);
        }
        if(sb.length()>0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        try {         
            XuatDonhang xdh = new XuatDonhang();
            xdh.setID(Integer.parseInt(txtID.getText()));
            xdh.setMaDH(txtMadh.getText());
            xdh.setMaKH(txtmaKH.getText());
            xdh.setHoten(txtHotenKH.getText());
            xdh.setTenSP(txtTenSP.getText());
            xdh.setSoluong(Integer.parseInt(txtSoluong.getText()));
            xdh.setGiaban(Integer.parseInt(txtGiaban.getText())); 
            insert(xdh);
            DefaultTableModel model = (DefaultTableModel) tblDonhang.getModel();
            model.setRowCount(0);
            ShowDL();
            JOptionPane.showMessageDialog(this, "Sinh viên mới đã được lưu vào CSDL");
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Error: "+e.getMessage());
             e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if(txtMadh.getText().equals("")){
            sb.append("Mã Đơn hàng không được để trống");
            txtMadh.setBackground(Color.red);
        }else{
            txtMadh.setBackground(Color.white);
        }
        if(sb.length()>0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if(JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật Đơn hàng này không ?")== JOptionPane.NO_OPTION){
            return;
        }
        try {         
            XuatDonhang xdh = new XuatDonhang();
            xdh.setID(Integer.parseInt(txtID.getText()));
            xdh.setMaDH(txtMadh.getText());
            xdh.setMaKH(txtmaKH.getText());
            xdh.setHoten(txtHotenKH.getText());
            xdh.setTenSP(txtTenSP.getText());
            xdh.setSoluong(Integer.parseInt(txtSoluong.getText()));
            xdh.setGiaban(Integer.parseInt(txtGiaban.getText())); 
            update(xdh);
            DefaultTableModel model = (DefaultTableModel) tblDonhang.getModel();
            model.setRowCount(0);
            ShowDL();
            JOptionPane.showMessageDialog(this, "Đơn hàng mới đã được cập nhật vào CSDL");
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Error: "+e.getMessage());
             e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed
    public XuatDonhang findByID(int ID) throws Exception{
        String sql = "select * from DonHang where ID = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, ID);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                XuatDonhang stud = new XuatDonhang();
                stud.setID(rs.getInt("ID"));
                stud.setMaDH(rs.getString("maDH"));
                stud.setMaKH(rs.getString("maKH"));
                stud.setHoten(rs.getString("HotenKH"));
                stud.setTenSP(rs.getString("TenSP"));
                stud.setSoluong(rs.getInt("Soluong"));
                stud.setGiaban(rs.getInt("Giaban"));
                return stud;
            }
           
        } catch (SQLException e) {
        }
         return null;
        
    }
    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        // TODO add your handling code here:
        if(txtID.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Mã đơn hàng cần phải nhập để tìm kiếm");
            return;
        }
        try {
            XuatDonhang stud = findByID(Integer.parseInt(txtID.getText()));
            if(stud != null){
                txtID.setText(String.valueOf(stud.getID()));
                txtMadh.setText(stud.getMaDH());
                txtmaKH.setText(stud.getMaKH());
                txtHotenKH.setText(stud.getHoten());
                txtTenSP.setText(stud.getTenSP());
                txtSoluong.setText(String.valueOf(stud.getSoluong()));
                txtGiaban.setText(String.valueOf(stud.getGiaban()));

            }else{
                JOptionPane.showMessageDialog(this, "Đơn hàng không tìm thấy");
            }
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Error: "+e.getMessage());
             e.printStackTrace();            
        }
    }//GEN-LAST:event_btnTimkiemActionPerformed
    public boolean delete(String maDH) throws Exception{
            String sql = "delete from Donhang where maDH = ?";
            try {
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, maDH);
                return ps.executeUpdate()>0;
            } catch (Exception e) {
                e.printStackTrace();
            }
             return false;

        }
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if(txtMadh.getText().equals("")){
            sb.append("Mã Đơn hàng không được để trống");
            txtMadh.setBackground(Color.red);
        }else{
            txtMadh.setBackground(Color.white);
        }
        if(sb.length()>0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        if(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa xóa này không ?")== JOptionPane.NO_OPTION){
            return;
        }
        try {                 
            XuatDonhang dao = new XuatDonhang();
            delete(txtMadh.getText());
            DefaultTableModel model = (DefaultTableModel) tblDonhang.getModel();
            model.setRowCount(0);            
            ShowDL();
            JOptionPane.showMessageDialog(this, "Đơn hàng đã được xóa khỏi CSDL");
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Error: "+e.getMessage());
             e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonhangJfame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonhangJfame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonhangJfame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonhangJfame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonhangJfame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDonhang;
    private javax.swing.JTextField txtGiaban;
    private javax.swing.JTextField txtHotenKH;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMadh;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtmaKH;
    // End of variables declaration//GEN-END:variables
}
